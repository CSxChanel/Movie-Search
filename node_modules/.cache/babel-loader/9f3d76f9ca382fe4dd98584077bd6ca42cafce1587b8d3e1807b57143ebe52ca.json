{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/projek/src/components/MoviesSlider/MovieSlider.jsx\",\n  _s = $RefreshSig$();\n// MovieSlider.jsx\nimport React, { useEffect, useState } from \"react\";\n// Api\nimport { getTrending } from \"../../Api.js\";\n// Components\nimport Toggle from \"../Toggle\";\nimport MovieCard from \"../MovieCard\";\nimport MovieSkeleton from \"../MovieSkeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSlider = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [toggleActive, setToggleActive] = useState(\"today\");\n  const toggles = [{\n    id: \"today\",\n    label: \"Today\"\n  }, {\n    id: \"week\",\n    label: \"This Week\"\n  }];\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await getTrending();\n      setMovies(response);\n      setIsLoading(false);\n    };\n    fetchMovies();\n  }, []);\n  const handleChangeToggle = value => {\n    setToggleActive(value);\n    // You can add more logic to fetch different data based on the toggle value\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mb-4 mt-9\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Trending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n        toggles: toggles,\n        toggleActive: toggleActive,\n        handleChangeToggle: handleChangeToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4 snap-x overflow-x-auto scroll-smooth\",\n      children: isLoading ? Array.from({\n        length: 10\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(MovieSkeleton, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this)) : movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-w-[155px] md:min-w-[170px] lg:min-w-[180px] flex flex-col\",\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 35\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSlider, \"KxDn7/FeKDgNv4kXE+EEGvkHqR4=\");\n_c = MovieSlider;\nexport default MovieSlider;\nvar _c;\n$RefreshReg$(_c, \"MovieSlider\");","map":{"version":3,"names":["React","useEffect","useState","getTrending","Toggle","MovieCard","MovieSkeleton","jsxDEV","_jsxDEV","MovieSlider","_s","movies","setMovies","isLoading","setIsLoading","toggleActive","setToggleActive","toggles","id","label","fetchMovies","response","handleChangeToggle","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","index","movie","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/projek/src/components/MoviesSlider/MovieSlider.jsx"],"sourcesContent":["// MovieSlider.jsx\nimport React, { useEffect, useState } from \"react\";\n// Api\nimport { getTrending } from \"../../Api.js\";\n// Components\nimport Toggle from \"../Toggle\";\nimport MovieCard from \"../MovieCard\";\nimport MovieSkeleton from \"../MovieSkeleton\";\n\nconst MovieSlider = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [toggleActive, setToggleActive] = useState(\"today\");\n\n    const toggles = [\n        { id: \"today\", label: \"Today\" },\n        { id: \"week\", label: \"This Week\" }\n    ];\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            const response = await getTrending();\n            setMovies(response);\n            setIsLoading(false);\n        };\n\n        fetchMovies();\n    }, []);\n\n    const handleChangeToggle = value => {\n        setToggleActive(value);\n        // You can add more logic to fetch different data based on the toggle value\n    };\n\n    return (\n        <div>\n            <div className=\"flex justify-between mb-4 mt-9\">\n                <h2>Trending</h2>\n                <Toggle\n                    toggles={toggles}\n                    toggleActive={toggleActive}\n                    handleChangeToggle={handleChangeToggle}\n                />\n            </div>\n            <div className=\"flex space-x-4 snap-x overflow-x-auto scroll-smooth\">\n                {isLoading\n                    ? Array.from({ length: 10 }).map((_, index) => (\n                          <MovieSkeleton key={index} />\n                      ))\n                    : movies.map(movie => {\n                          return (\n                              <div\n                                  key={movie.id}\n                                  className=\"min-w-[155px] md:min-w-[170px] lg:min-w-[180px] flex flex-col\"\n                              >\n                                  <MovieCard key={movie.id} movie={movie} />\n                              </div>\n                          );\n                      })}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieSlider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}