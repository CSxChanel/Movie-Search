{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/projek/src/pages/MovieDetail.jsx\",\n  _s = $RefreshSig$();\n// src/pages/MovieDetail.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieDetails, getMovieVideos } from \"../Api\";\nimport VideoTrailer from \"../components/VideoTrailer\";\n//style.css\nimport \"./MovieDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        const movieVideos = await getMovieVideos(id);\n        setMovie(movieDetails);\n        setVideos(movieVideos);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching movie data:\", error);\n      }\n    };\n    fetchMovieData();\n  }, [id]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  const posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  const youtubeVideos = videos.filter(video => video.site === \"YouTube\" && video.type === \"Trailer\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-emerald-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: posterUrl,\n      alt: `${movie.title} Poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movie.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Overview: \", movie.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), youtubeVideos.length > 0 && /*#__PURE__*/_jsxDEV(VideoTrailer, {\n        videos: youtubeVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetail, \"h5DaruQIlkj1zcEr27fUKuLVFJM=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getMovieDetails","getMovieVideos","VideoTrailer","jsxDEV","_jsxDEV","MovieDetail","_s","id","movie","setMovie","videos","setVideos","isLoading","setIsLoading","fetchMovieData","movieDetails","movieVideos","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","posterUrl","poster_path","youtubeVideos","filter","video","site","type","className","src","alt","title","release_date","overview","length","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/projek/src/pages/MovieDetail.jsx"],"sourcesContent":["// src/pages/MovieDetail.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieDetails, getMovieVideos } from \"../Api\";\nimport VideoTrailer from \"../components/VideoTrailer\";\n//style.css\nimport \"./MovieDetail.css\";\n\nconst MovieDetail = () => {\n    const { id } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [videos, setVideos] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchMovieData = async () => {\n            try {\n                const movieDetails = await getMovieDetails(id);\n                const movieVideos = await getMovieVideos(id);\n                setMovie(movieDetails);\n                setVideos(movieVideos);\n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error fetching movie data:\", error);\n            }\n        };\n\n        fetchMovieData();\n    }, [id]);\n\n    if (isLoading) {\n        return <p>Loading...</p>;\n    }\n\n    const posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    const youtubeVideos = videos.filter(\n        video => video.site === \"YouTube\" && video.type === \"Trailer\"\n    );\n\n    return (\n        <div className=\"bg-emerald-500\">\n            <img src={posterUrl} alt={`${movie.title} Poster`} />\n            <div className='container'>\n\t\n            <h1>{movie.title}</h1>\n            <p>Release Date: {movie.release_date}</p>\n            <p>Overview: {movie.overview}</p>\n            {youtubeVideos.length > 0 && (\n                <VideoTrailer videos={youtubeVideos} />\n            )}\n            </div>\n            {/* Add more details such as actors, trailers, etc. */}\n        </div>\n    );\n};\n\nexport default MovieDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}