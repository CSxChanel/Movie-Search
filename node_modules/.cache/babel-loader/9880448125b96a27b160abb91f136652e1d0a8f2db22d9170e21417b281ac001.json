{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/projek/src/Componen/jam/HijriyahDate.jsx\",\n  _s = $RefreshSig$();\n// src/HijriyahDate.js\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HijriyahDate = () => {\n  _s();\n  const [hijriDate, setHijriDate] = useState(\"\");\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      let fixd;\n      function gregToFixed(year, month, day) {\n        let a = Math.floor((year - 1) / 4);\n        let b = Math.floor((year - 1) / 100);\n        let c = Math.floor((year - 1) / 400);\n        let d = Math.floor((367 * month - 362) / 12);\n        return 1 - 1 + 365 * (year - 1) + a - b + c + d + day;\n      }\n      function Hijri(year, month, day) {\n        this.year = year;\n        this.month = month;\n        this.day = day;\n        this.toFixed = hijriToFixed;\n        this.toString = hijriToString;\n      }\n      function hijriToFixed() {\n        return this.day + Math.ceil(29.5 * (this.month - 1)) + (this.year - 1) * 354 + Math.floor((3 + 11 * this.year) / 30) + 227015 - 1;\n      }\n      function hijriToString() {\n        let months = [\"Muharram\", \"Safar\", \"Rabiul Awwal\", \"Rabiul Tsani\", \"Jumadil Ula\", \"Jumadil Tsani\", \"Rajab\", \"Sya'ban\", \"Ramadhan\", \"Syawwal\", \"Dzul Qa'dah\", \"Dzul Hijjah\"];\n        return this.day + \" \" + months[this.month - 1] + \" \" + this.year;\n      }\n      function fixedToHijri(f) {\n        let i = new Hijri(1100, 1, 1);\n        i.year = Math.floor((30 * (f - 227015) + 10646) / 10631);\n        let i2 = new Hijri(i.year, 1, 1);\n        let m = Math.ceil((f - 29 - i2.toFixed()) / 29.5) + 1;\n        i.month = Math.min(m, 12);\n        i2.year = i.year;\n        i2.month = i.month;\n        i2.day = 1;\n        i.day = f - i2.toFixed() + 1;\n        return i;\n      }\n      let tod = new Date();\n      let y = tod.getFullYear();\n      let m = tod.getMonth();\n      let d = tod.getDate();\n      m++;\n      fixd = gregToFixed(y, m, d);\n      let h = new Hijri(1421, 11, 28);\n      h = fixedToHijri(fixd);\n      let tglHijriyah = h.toString() + \" H\";\n      setHijriDate(tglHijriyah);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tglHijriyah\",\n    children: hijriDate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n};\n_s(HijriyahDate, \"D0eU/DAeDEE/frPplQsKNo3hsv8=\");\n_c = HijriyahDate;\nexport default HijriyahDate;\nvar _c;\n$RefreshReg$(_c, \"HijriyahDate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HijriyahDate","_s","hijriDate","setHijriDate","intervalId","setInterval","fixd","gregToFixed","year","month","day","a","Math","floor","b","c","d","Hijri","toFixed","hijriToFixed","toString","hijriToString","ceil","months","fixedToHijri","f","i","i2","m","min","tod","Date","y","getFullYear","getMonth","getDate","h","tglHijriyah","clearInterval","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/projek/src/Componen/jam/HijriyahDate.jsx"],"sourcesContent":["// src/HijriyahDate.js\nimport React, { useState, useEffect } from \"react\";\n\nconst HijriyahDate = () => {\n    const [hijriDate, setHijriDate] = useState(\"\");\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            let fixd;\n\n            function gregToFixed(year, month, day) {\n                let a = Math.floor((year - 1) / 4);\n                let b = Math.floor((year - 1) / 100);\n                let c = Math.floor((year - 1) / 400);\n                let d = Math.floor((367 * month - 362) / 12);\n\n                return 1 - 1 + 365 * (year - 1) + a - b + c + d + day;\n            }\n\n            function Hijri(year, month, day) {\n                this.year = year;\n                this.month = month;\n                this.day = day;\n                this.toFixed = hijriToFixed;\n                this.toString = hijriToString;\n            }\n\n            function hijriToFixed() {\n                return (\n                    this.day +\n                    Math.ceil(29.5 * (this.month - 1)) +\n                    (this.year - 1) * 354 +\n                    Math.floor((3 + 11 * this.year) / 30) +\n                    227015 -\n                    1\n                );\n            }\n\n            function hijriToString() {\n                let months = [\n                    \"Muharram\",\n                    \"Safar\",\n                    \"Rabiul Awwal\",\n                    \"Rabiul Tsani\",\n                    \"Jumadil Ula\",\n                    \"Jumadil Tsani\",\n                    \"Rajab\",\n                    \"Sya'ban\",\n                    \"Ramadhan\",\n                    \"Syawwal\",\n                    \"Dzul Qa'dah\",\n                    \"Dzul Hijjah\"\n                ];\n\n                return (\n                    this.day + \" \" + months[this.month - 1] + \" \" + this.year\n                );\n            }\n\n            function fixedToHijri(f) {\n                let i = new Hijri(1100, 1, 1);\n                i.year = Math.floor((30 * (f - 227015) + 10646) / 10631);\n                let i2 = new Hijri(i.year, 1, 1);\n                let m = Math.ceil((f - 29 - i2.toFixed()) / 29.5) + 1;\n                i.month = Math.min(m, 12);\n                i2.year = i.year;\n                i2.month = i.month;\n                i2.day = 1;\n                i.day = f - i2.toFixed() + 1;\n                return i;\n            }\n\n            let tod = new Date();\n            let y = tod.getFullYear();\n            let m = tod.getMonth();\n            let d = tod.getDate();\n\n            m++;\n            fixd = gregToFixed(y, m, d);\n            let h = new Hijri(1421, 11, 28);\n            h = fixedToHijri(fixd);\n\n            let tglHijriyah = h.toString() + \" H\";\n            setHijriDate(tglHijriyah);\n        }, 1000);\n\n        return () => clearInterval(intervalId);\n    }, []);\n\n    return <div id=\"tglHijriyah\">{hijriDate}</div>;\n};\n\nexport default HijriyahDate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}