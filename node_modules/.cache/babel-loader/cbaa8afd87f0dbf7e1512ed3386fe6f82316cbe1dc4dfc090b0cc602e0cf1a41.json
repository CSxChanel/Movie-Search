{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/projek/src/pages/MovieDetail.jsx\",\n  _s = $RefreshSig$();\n// src/pages/MovieDetail.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieDetails, getMovieVideos } from \"../Api\";\n//style.css\nimport \"./MovieDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        const movieVideos = await getMovieVideos(id);\n        setMovie(movieDetails);\n        setVideos(movieVideos);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching movie data:\", error);\n      }\n    };\n    fetchMovieData();\n  }, [id]);\n  const getYoutubeTrailer = () => {\n    const trailer = videos.find(video => video.type === \"Trailer\" && video.site === \"YouTube\");\n    return trailer ? `https://www.youtube.com/embed/${trailer.key}` : null;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  const posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-emerald-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: posterUrl,\n      alt: `${movie.title} Poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Release Date: \", movie.release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overview: \", movie.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), getYoutubeTrailer() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: getYoutubeTrailer(),\n        title: \"YouTube trailer\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetail, \"h5DaruQIlkj1zcEr27fUKuLVFJM=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getMovieDetails","getMovieVideos","jsxDEV","_jsxDEV","MovieDetail","_s","id","movie","setMovie","videos","setVideos","isLoading","setIsLoading","fetchMovieData","movieDetails","movieVideos","error","console","getYoutubeTrailer","trailer","find","video","type","site","key","children","fileName","_jsxFileName","lineNumber","columnNumber","posterUrl","poster_path","className","title","src","alt","release_date","overview","width","height","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/projek/src/pages/MovieDetail.jsx"],"sourcesContent":["// src/pages/MovieDetail.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieDetails, getMovieVideos } from \"../Api\";\n//style.css\nimport \"./MovieDetail.css\";\n\nconst MovieDetail = () => {\n    const { id } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [videos, setVideos] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchMovieData = async () => {\n            try {\n                const movieDetails = await getMovieDetails(id);\n                const movieVideos = await getMovieVideos(id);\n                setMovie(movieDetails);\n                setVideos(movieVideos);\n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error fetching movie data:\", error);\n            }\n        };\n\n        fetchMovieData();\n    }, [id]);\n\n    const getYoutubeTrailer = () => {\n        const trailer = videos.find(\n            video => video.type === \"Trailer\" && video.site === \"YouTube\"\n        );\n        return trailer ? `https://www.youtube.com/embed/${trailer.key}` : null;\n    };\n\n    if (isLoading) {\n        return <p>Loading...</p>;\n    }\n\n    const posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n    return (\n        <div className=\"bg-emerald-500\">\n            <h1>{movie.title}</h1>\n            <img src={posterUrl} alt={`${movie.title} Poster`} />\n            <p>Release Date: {movie.release_date}</p>\n            <p>Overview: {movie.overview}</p>\n            {getYoutubeTrailer() && (\n                <div className=\"trailer\">\n                    <iframe\n                        width=\"560\"\n                        height=\"315\"\n                        src={getYoutubeTrailer()}\n                        title=\"YouTube trailer\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                </div>\n            )}\n            {/* Add more details such as actors, trailers, etc. */}\n        </div>\n    );\n};\n\nexport default MovieDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}